version: '3.5'

services:
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    build: ./docker/nginx
    restart: always
    ports:
      - "${NGINX_PORT}:80"
      - "${NGINX_PORT_SSL}:443"
    volumes:
      - .:/var/www/${COMPOSE_PROJECT_NAME}
    environment:
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      TZ: ${OTHER_TZ},
      NGINX_HOST: ${NGINX_HOST},
      NGINX_PORT: ${NGINX_PORT},
      NGINX_PORT_SSL: ${NGINX_PORT_SSL},
    links:
      - php

  php:
    container_name: ${COMPOSE_PROJECT_NAME}_php
    build:
      context: ./docker/php
      args:
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
    restart: always
    volumes:
      - .:/var/www/${COMPOSE_PROJECT_NAME}
      - ./docker/php/crontab:/etc/crontab
    environment:
      TZ: ${OTHER_TZ}
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
    links:
      - postgres

  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - emplitude_postgres:/var/lib/postgresql/data
      - ./docker/dump:/tmp/dump
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=${POSTGRES_DATA}
      - TZ=${OTHER_TZ}

  redis:
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    image: redis
    ports:
      - ${REDIS_PORT}:6379

volumes:
  emplitude_postgres:
  emplitude_redis:
